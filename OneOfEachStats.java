import java.util.Random;
/**
 *  Computes some statistics about families in which the parents decide 
 *  to have children until they have at least one child of each gender.
 *  The program expects to get two command-line arguments: an int value
 * 	that determines how many families to simulate, and an int value
 *  that serves as the seed of the random numbers generated by the program.
 *  Example usage: % java OneOfEachStats 1000 1
 */
public class OneOfEachStats {
	public static void main (String[] args) {
		
		int T = Integer.parseInt(args[0]);
		int seed = Integer.parseInt(args[1]);
		// Initailizes a random numbers generator with the given seed value
        Random generator = new Random(seed);  

        int f2 = 0;
        int f3 = 0;
        int f4 = 0;
        String gender1 = "0";
		String gender2 = "1";
		boolean flag = true;
     	int counter = 0;


        for(int i = 0; i < T ; i ++){

		do{
			double j = Math.random();
			counter += 1;

			if(j > 0.5){
				gender1 = "g";
			} else {
				gender1 = "b";
			}

			if((gender1 != gender2) && (counter > 1)){
				flag = false;

			if (counter == 2){
				f2 = f2 + 1;
			  } else {
			    if (counter == 3){
				f3 = f3 +1;
			  } else { 
				f4 = f4 +1;

			}
		}
			}
			gender2 = gender1;

		} while (flag);

		flag = true;
		counter = 0;
		}	
		
	
		double average = (((f2*2) + (f3*3) + (f4*4))/(double) T);
		String common = "0";

		if ((f2 > f3) && (f2 > f4)){
		common = "2";
   		 } else if (f3 > f2 && f3 > f4){
		common = "3";
		} else {
		common = "4 or more";
	}


		System.out.println("Average: " + average + " children to get at least one of each gender.");
		System.out.println("Number of families with 2 children: " + f2);
		System.out.println("Number of families with 3 children: " + f3);
		System.out.println("Number of families with 4 or more children: " + f4);
		System.out.println("The most common number of children is " + common);		
	}
}


	

		
		//// In the previous version of this program, you used a statement like:
		//// double rnd = Math.random();
		//// Where "rnd" is the variable that stores the generated random value.
		//// In this version of the program, replace this statement with:
		//// double rnd = generator.nextDouble();
		//// This statement will generate a random value in the range [0,1),
		//// just like you had in the previous version, except that the 
		//// randomization will be based on the given seed.
		//// This is the only change that you have to do in the program.
		    
	

